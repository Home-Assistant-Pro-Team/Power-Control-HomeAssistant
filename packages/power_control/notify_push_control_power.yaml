automation:
  - alias: notify_control_power_push
    id: notify_control_power_push
    mode: queued
    trigger:
      - platform: event
        event_type: customizations
        event_data:
          types: notify_power_control
    action:
      - alias: Invia notifica notifica push alle persone che non sono in casa
        repeat:
          for_each: >-
            {% from 'personal.jinja' import persons %}
            {% set output = namespace(state_home=[]) %}
              {%for dict in persons()|from_json if states[dict.person].state == 'home' %}
                {%- set output.state_home = output.state_home + ['notify.'+dict['notify'] ] -%}
              {% endfor %}
                {{ output.state_home }}
          sequence:
            - action: "{{ repeat.item }}"
              data:
                message: "{{ trigger.event.data.message|default('Messaggio non impostato') }}"
                title: "{{trigger.event.data.title |default('--POWER CONTROL--') }}"
                data:
                  image: "{{ trigger.event.data.image | default(None) }}"
                  tag: "{{ trigger.event.data.tag | default(None) }}"

                  # ios
                  push:
                    sound:
                      name: "default"
                      critical: "{{ 1 if trigger.event.data.critical is defined else 0 }}"
                      volume: "{{ trigger.event.data.critical if trigger.event.data.critical is defined else 1.0 }}"
                  # android
                  ttl: 0
                  priority: "high"
                  channel: "{{ 'alarm_stream' if trigger.event.data.critical is defined else None }}"
                  notification_icon: "{{ trigger.event.data.notification_icon |default('mdi:power-plug') }}"
                  color: "{{ trigger.event.data.color |default('red') }}"
                  sticky: "{{ trigger.event.data.sticky |default('true') }}"
